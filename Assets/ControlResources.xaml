<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<ControlTemplate x:Key="ExpanderToggleButton" TargetType="ToggleButton">
		<Border Name="Border"
				CornerRadius="2,0,0,0"
				Background="Transparent"
				BorderBrush="{StaticResource NormalBorderBrush}"
				BorderThickness="0,0,1,0">
			<Path Name="Arrow"
				  Fill="{StaticResource GlyphBrush}"
				  HorizontalAlignment="Center"
				  VerticalAlignment="Center"
				  Data="M 0 8 L 4 4 L 0 0 Z"/>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="ToggleButton.IsMouseOver" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
			</Trigger>
			<Trigger Property="IsPressed" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
			</Trigger>
			<Trigger Property="IsChecked" Value="true">
				<Setter TargetName="Arrow" Property="Data" Value="M 0 0 L 4 4 L 8 0 Z" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
				<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
				<Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
				<Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledForegroundBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style TargetType="Expander">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Expander">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Name="ContentRow" Height="0"/>
						</Grid.RowDefinitions>
						<Border Name="Border"
								Grid.Row="0"
								Background="{StaticResource LightBrush}"
								BorderBrush="{StaticResource NormalBorderBrush}"
								BorderThickness="1"
								CornerRadius="2,2,0,0" >
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="20" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<ToggleButton IsChecked="{Binding Path=IsExpanded,Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
											  OverridesDefaultStyle="True"
											  Template="{StaticResource ExpanderToggleButton}"
											  Background="{StaticResource NormalBrush}" />
								<ContentPresenter Grid.Column="1"
												  Margin="4"
												  ContentSource="Header"
												  RecognizesAccessKey="True" />
							</Grid>
						</Border>
						<Border Name="Content"
								Grid.Row="1"
								Background="{StaticResource WindowBackgroundBrush}"
								BorderBrush="{StaticResource SolidBorderBrush}"
								BorderThickness="1,0,1,1"
								CornerRadius="0,0,2,2" >
							<ContentPresenter Margin="4" />
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="True">
							<Setter TargetName="ContentRow" Property="Height" Value="{Binding ElementName=Content,Path=DesiredHeight}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
							<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
							<Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
	
	<Style TargetType="{x:Type GroupBox}">
		<Setter Property="BorderBrush" Value="#D5DFE5" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GroupBox}">
					<Grid SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="6" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="6" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
							<RowDefinition Height="6" />
						</Grid.RowDefinitions>
						<Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Background="{TemplateBinding Background}" />
						<Border Name="Header" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" >
							<ContentPresenter ContentSource="Header" RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Border>
						<ContentPresenter Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						<Border Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4"  BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3">
							<Border.OpacityMask>
								<MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
									<Binding ElementName="Header" Path="ActualWidth" />
									<Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
									<Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
								</MultiBinding>
							</Border.OpacityMask>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
</ResourceDictionary>